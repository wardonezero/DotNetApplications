@page "/servers"
@inject IConfiguration Configuration
<h3>Servers</h3>
<br />
<div class="container-fluid text-center">
    <div class="row w-50">
        @foreach (var city in CitiesRepository.GetCities())
        {
            <div class="col">
                <div class="card">
                    <img src="@(Configuration[$"Seals:{city}"])" class="card-img-top" alt="...">
                    <div class="card-body">
                        <button type="button" class="btn btn-primary">@city</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>
<br />
<ServerComponent @rendermode="InteractiveServer"></ServerComponent>
<br />
<a href="/servers/add" class="btn btn-primary">Add Server</a>
<br />
<ul>
    @foreach (var server in servers)
    {
        <li>
            @server.Name in @server.City is <span style="color:@(server.IsOnline?"green":"red")">@(server.IsOnline ? "online" : "offline")</span>
            &nbsp;
            <a href="/servers/@server.ServerId" class="btn btn-link">Edit</a>
            &nbsp;
            <EditForm Model="server" FormName="@($"formServer-{server.ServerId}")" OnValidSubmit="@(() => {DeleteServer(server.ServerId);})">
                <button type="submit" class="btn btn-primary">Delete</button>
            </EditForm>
        </li>
    }
</ul>

@code {
    // private List<Server> servers = ServersRepository.GetServersByCity("Chicago");
    private List<Server> servers = ServersRepository.GetServres();

    private void DeleteServer(int ServerId)
    {
        if (ServerId > 0)
            ServersRepository.DeleteServer(ServerId);
    }
}
